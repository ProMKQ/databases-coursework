import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,e as a,o as i}from"./app-Cv9qgwW0.js";const r={};function n(o,e){return i(),l("div",null,e[0]||(e[0]=[a('<h1 id="аналіз-предметноі-області" tabindex="-1"><a class="header-anchor" href="#аналіз-предметноі-області"><span>Аналіз предметної області</span></a></h1><h2 id="вступ" tabindex="-1"><a class="header-anchor" href="#вступ"><span>Вступ</span></a></h2><p><em>[Вступ повинен містити короткий огляд всього документу.]</em></p><h2 id="основні-визначення" tabindex="-1"><a class="header-anchor" href="#основні-визначення"><span>Основні визначення</span></a></h2><p><strong><a href="https://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%94%D0%BA%D1%82" target="_blank" rel="noopener noreferrer">Проєкт</a></strong> - обмежена в часі, ресурсах та вимогах якості унікальна сукупність процесів, направлена на досягнення унікальних цілей та завдань для створення нової цінності (продукту або послуги).</p><p><strong><a href="https://uk.m.wikipedia.org/wiki/%D0%97%D0%B0%D0%BC%D0%BE%D0%B2%D0%BD%D0%B8%D0%BA" target="_blank" rel="noopener noreferrer">Замовник</a></strong> - особа або організація, яка замовляє та фінансує проект.</p><p><strong><a href="https://uk.m.wikipedia.org/wiki/%D0%9C%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80_%D0%BF%D1%80%D0%BE%D1%94%D0%BA%D1%82%D1%83" target="_blank" rel="noopener noreferrer">Проєктний менеджер</a></strong> - це фахівець у сфері управління проєктами. Менеджер проєкту може бути відповідальним за планування, виконання та завершення будь-якого проєкту, а також в будь-яких дотичних операціях, що мають визначений початок та кінець. Проєктний менеджер є першою точкою контакту стосовно будь-яких проблем чи випадків, які ескалюються керівниками різноманітних відділень у організації, перед тим як бути переадресованими до вищих щаблів керівництва.</p><p><strong><a href="https://pmdoc.ua/product/pmbok4636/" target="_blank" rel="noopener noreferrer">План управління проєктами</a></strong> - це документ, який описує, як проєкт буде виконуватися, здійснюватися його моніторинг і контроль, а також як він буде закриватися. Цій План інтегрує та консолідує всі підпорядковані плани управління та базові плани, а також іншу інформацію, необхідну для управління проєктом. Потреби проєкту визначають стратегії, які будуть використовуватися для управління різними аспектами проєкту, такими як обсяг, розклад, вартість, якість, людські ресурси, комунікації, ризики та закупівлі.</p><p><strong><a href="https://helpcrunch.com/blog/uk/kpi-abo-kliuchovi-pokaznyky-efektyvnosti/#So_take_KPI" target="_blank" rel="noopener noreferrer">Ключові показники ефективності</a></strong> - це система, яка оцінює успішність досягнень в роботі компанії, її відділів та окремих працівників. Вона дозволяє створити спеціальний план й цілі, яких слід дотримуватись протягом певного періоду, а потім тішитись результатам (або умиватися слізьми та краще формулювати ті цілі).</p><p><strong><a href="https://www.kursak.com/proektuvannia-znachennia-kharakterystyka-elementy/#i-2" target="_blank" rel="noopener noreferrer">Елементи проєктування</a></strong> - проєкт має включати низку складових, які забезпечують його якісне виконання:</p><ul><li>Затвердження проєктних задач та цілей - включає в себе мету проєктування, тобто вирішення задачі та досягнення поставленої мети. Будь-яка задача проєктування дуже часто описується як погано структурована.</li><li>Обмеження - що діляться на (класифікація обмежень проектування): <ul><li>Генератори обмежень.</li><li>Предметну область обмежень.</li><li>Функції обмежень.</li></ul></li><li>Опис продукту - представляє собою інформацію про обєкт, який ми будемо проектувати.</li><li>Доцільність - преставляє собою певний ступінь, який дає можливість сказати, що все те, що ми будемо робити, тобто проектувати, буде не даремно витраченим часом, що те, що в кінцевому випадку в нас вийде, зможе бути десь використане.</li><li>План виробництва - являє собою певну послідовність кроків, етапів, які потрібно пройти заради досягнення кінцевої мети в повній мірі.</li><li>Опис використання - представляє певну структуровану інформацію про те, як можна використовувати кінцевий продукт, який проектується.</li></ul><p><strong><a href="https://pmb.com.ua/uk/slovar-terminov/sistema-upravleniya-proektom-project-management-system-instrument/" target="_blank" rel="noopener noreferrer">Система управління проєктами</a></strong> - сукупність процесів, інструментів, методів, методологій, ресурсів і процедур з управління проєктом. Система документується в плані управління проєктами, і її зміст може відрізнятися в залежності від галузі застосування, організаційного впливу, складності проєкту і доступності наявних систем. Система управління проєктами, яка може бути як формальною, так і неформальною, допомагає менеджеру проєкту ефективно доводити проєкт до завершення. Система управління проєктами – це ряд процесів, і пов’язаних з ними функцій, моніторингу і контролю, об’єднаних в функціональну єдність.</p><p><strong><a href="http://confcontact.com/2015_04_25/3/3_shlyaga_nikolaev.html#:~:text=%D0%96%D0%B8%D1%82%D1%82%D1%94%D0%B2%D0%B8%D0%B9%20%D1%86%D0%B8%D0%BA%D0%BB%20%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%20%E2%80%93%20%D0%BA%D0%BE%D0%BD%D1%86%D0%B5%D0%BF%D1%86%D1%96%D1%8F%2C%20%D1%89%D0%BE,%D1%81%D0%B2%D0%BE%D1%8E%20%D0%BD%D0%B0%D0%B7%D0%B2%D1%83%20%D1%82%D0%B0%20%D1%87%D0%B0%D1%81%D0%BE%D0%B2%D1%96%20%D0%BC%D0%B5%D0%B6%D1%96." target="_blank" rel="noopener noreferrer">Життєвий цикл проєкта</a></strong> - концепція, що розглядає проект як послідовність фаз, подій та етапів, кожна з котрих має свою назву та часові межі. Він як невід’ємний елемент концепції проектного аналізу включає час від перших затрат до останньої вигоди проекту та відображає розвиток проекту, роботи, які проводяться на різних стадіях підготовки, реалізації та експлуатації проекту.</p><p><strong><a href="https://nt.ua/blog/methodology-of-project-management#1" target="_blank" rel="noopener noreferrer">Методологія управління проєктами</a></strong> - це практика або техніка, яка допоможе вам успішно керувати проєктом і виконувати його. Вона описує, як взятися за проєкт і як виконати покрокові інструкції щодо його завершення. Крім того, вона обмежує життєвий цикл проєкту правильно структурованими етапами.</p><p><strong><a href="https://wizeclub.education/blog/populyarni-metodologiyi-upravlinnya-proyektami-vid-gnuchkoyi-agile-do-vimoglivoyi-prince2/" target="_blank" rel="noopener noreferrer">Класифікація методів управління проєктів</a></strong></p><ul><li><p><strong>Традиційні методи управління проєктами.</strong><br>Ці методи мають чітку структуру, де проект проходить через певні фази: ініціація, планування, виконання, моніторинг і завершення.</p><ul><li>Метод водоспаду (Waterfall):</li><li>PMBOK (Project Management Body of Knowledge)</li><li>PRINCE2 (PRojects IN Controlled Environments)</li></ul></li><li><p><strong>Гнучкі методи управління проєктами (Agile)</strong><br>Ці методи зосереджені на швидкому реагуванні на зміни та поступовій поставці результатів.</p><ul><li>Scrum</li><li>Kanban</li><li>Lean</li></ul></li><li><p><strong>Гібридні методи</strong><br>Поєднують елементи як традиційних, так і гнучких підходів.</p><ul><li>Agile-Waterfall (гібридний підхід)</li><li>Lean Six Sigma</li></ul></li><li><p><strong>Інші методи управління</strong></p><ul><li>Critical Path Method (CPM)</li><li>Critical Chain Project Management (CCPM)</li></ul></li></ul><p><strong><a href="https://www.uzhnu.edu.ua/en/infocentre/get/25551" target="_blank" rel="noopener noreferrer">Модель</a></strong> - відтворення чи відображення об&#39;єкту, задуму (конструкцій), опису чи розрахунків, що відображає, імітує, відтворює принципи внутрішньої організації або функціонування, певні властивості, ознаки чи/та характеристики об&#39;єкта дослідження чи відтворення (оригіналу).</p><p><strong><a href="https://uk.m.wikipedia.org/wiki/%D0%90%D1%80%D1%82%D0%B5%D1%84%D0%B0%D0%BA%D1%82_(UML)" target="_blank" rel="noopener noreferrer">Артефакт</a></strong> - окремий шмат інформації, що використовується чи з&#39;являється в процесі розробки програмного забезпечення. Це може бути файл з кодом, модель, частина документації, чи повідомлення електронної пошти або навіть нотатка, приклеєна до монітора.</p><p><strong><a href="https://uk.m.wikipedia.org/wiki/Unified_Modeling_Language" target="_blank" rel="noopener noreferrer">UML</a></strong> - уніфікована мова моделювання, використовується у парадигмі об&#39;єктно-орієнтованого програмування. Є невід&#39;ємною частиною уніфікованого процесу розробки програмного забезпечення.</p><p><strong><a href="https://uk.m.wikipedia.org/wiki/%D0%94%D1%96%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0_%D2%90%D0%B0%D0%BD%D1%82%D0%B0" target="_blank" rel="noopener noreferrer">Діаграма Ґанта</a></strong> - діаграма, яка використовується для ілюстрації плану, графіка робіт за будь-яким проєктом. Є одним з засобів планування та управління проєктами.</p><h2 id="підходи-та-способи-вирішення-завдання" tabindex="-1"><a class="header-anchor" href="#підходи-та-способи-вирішення-завдання"><span>Підходи та способи вирішення завдання</span></a></h2><h3 id="waterfall" tabindex="-1"><a class="header-anchor" href="#waterfall"><span>Waterfall</span></a></h3><p><strong>Waterfall</strong> або каскадна модель є традиційною методологією управління проєктами, яка підходить для структурованих і стабільних проєктів. Основна характеристика цієї моделі — послідовність виконання етапів: кожен етап завершується, перш ніж розпочати наступний. Це підходить для проєктів з чітко визначеними вимогами та планом, де зміни на пізніх етапах небажані або неможливі.</p><figure><img src="https://wizeclub.education/wp-content/uploads/2023/09/waterfall1.png" alt="Основні етапи Waterfall" tabindex="0" loading="lazy"><figcaption>Основні етапи Waterfall</figcaption></figure><h4 id="переваги-waterfall" tabindex="-1"><a class="header-anchor" href="#переваги-waterfall"><span>Переваги Waterfall:</span></a></h4><ul><li>Чітка структура та послідовність етапів.</li><li>Легкість контролю за виконанням плану і витратами.</li><li>Повна документація, яка полегшує роботу нових учасників команди.</li></ul><h4 id="недоліки" tabindex="-1"><a class="header-anchor" href="#недоліки"><span>Недоліки:</span></a></h4><ul><li>Відсутність гнучкості до змін під час реалізації.</li><li>Ризик отримати результат, що не відповідає очікуванням, якщо клієнт не точно визначив вимоги на початку.</li></ul><h4 id="підходить-для" tabindex="-1"><a class="header-anchor" href="#підходить-для"><span>Підходить для:</span></a></h4><ul><li>Великих проєктів із багатьма стейкхолдерами.</li><li>Проєктів з суворими вимогами до бюджету та термінів.</li><li>Простих і коротких проєктів з чітко визначеними вимогами.</li></ul><p><strong>Waterfall</strong> найкраще підходить для проєктів, які мають стабільні вимоги, наприклад, у будівництві або виробництві. Однак для сучасної ІТ-розробки, де часті зміни вимог є звичайною справою, ця модель застосовується рідше.</p><h3 id="agile" tabindex="-1"><a class="header-anchor" href="#agile"><span>Agile</span></a></h3><p><strong>Agile</strong> — це гнучка методологія управління проєктами, яка розроблена для швидкої адаптації до змін і орієнтована на результат через постійну взаємодію з клієнтами та командою. На відміну від традиційного підходу Waterfall, Agile дозволяє вносити зміни на будь-якому етапі розробки й підтримує постійний зворотний зв’язок.</p><h4 id="основу-agile-закладено-в-agile-manifesto-якии-базується-на-чотирьох-ключових-цінностях" tabindex="-1"><a class="header-anchor" href="#основу-agile-закладено-в-agile-manifesto-якии-базується-на-чотирьох-ключових-цінностях"><span>Основу Agile закладено в &quot;Agile Manifesto&quot;, який базується на чотирьох ключових цінностях:</span></a></h4><ul><li>Люди та їхня взаємодія важливіші за процеси та інструменти.</li><li>Працюючий продукт важливіший за вичерпну документацію.</li><li>Співпраця з клієнтами важливіша за дотримання контрактів.</li><li>Готовність до змін важливіша за слідування плану.</li></ul><figure><img src="https://www.nvisia.com/hubfs/agile-methodology-chicago.png" alt="Agile methodology" tabindex="0" loading="lazy"><figcaption>Agile methodology</figcaption></figure><h4 id="переваги-agile" tabindex="-1"><a class="header-anchor" href="#переваги-agile"><span>Переваги Agile:</span></a></h4><ul><li><strong>Гнучкість і адаптивність</strong>: зміни можуть вноситися в будь-який момент, що робить Agile особливо ефективним для проєктів у динамічних ринкових умовах.</li><li><strong>Зниження ризиків</strong>: завдяки постійному зворотному зв&#39;язку й можливості коригувати продукт, ризики невдачі знижуються.</li><li><strong>Висока мотивація команди</strong>: залученість кожного учасника і рівність в ухваленні рішень підвищують мотивацію та відповідальність.</li></ul><h4 id="недоліки-agile" tabindex="-1"><a class="header-anchor" href="#недоліки-agile"><span>Недоліки Agile:</span></a></h4><ul><li><strong>Складність у ресурсному плануванні</strong>: через відсутність чіткого плану складно точно прогнозувати терміни та витрати.</li><li><strong>Залежність від команди</strong>: важко замінити членів команди, оскільки кожен глибоко залучений у процес.</li><li><strong>Ризик постійних змін</strong>: у неопитних проджект-менеджерів без досвіду Agile проєкт може перетворитися на нескінченний процес змін без досягнення результату.</li></ul><h4 id="кому-підіиде-agile" tabindex="-1"><a class="header-anchor" href="#кому-підіиде-agile"><span>Кому підійде Agile:</span></a></h4><p><strong>Agile</strong> підходить для проєктів, де вимоги можуть змінюватися, або коли клієнт не має чіткого бачення кінцевого результату. Це часто проєкти в IT-галузі, стартапи, або ж інноваційні продукти, де необхідно швидко реагувати на ринкові зміни й упроваджувати нові функції.</p><h3 id="lean" tabindex="-1"><a class="header-anchor" href="#lean"><span>Lean</span></a></h3><p><strong>Lean</strong> є окремою методологією, але вона тісно пов&#39;язана з Agile через схожі принципи гнучкості, адаптації до змін і орієнтованість на максимізацію цінності для користувача. Lean не пропонує конкретних інструментів чи фреймворків, як Agile, але слугує філософським підходом, який допомагає компаніям оптимізувати ресурси й створювати продукт на основі реальних потреб ринку.</p><figure><img src="https://optim.tildacdn.one/tild3732-6639-4638-a234-333434373765/-/format/webp/leanprinciples.jpg" alt="Основні принципи Lean" tabindex="0" loading="lazy"><figcaption>Основні принципи Lean</figcaption></figure><h4 id="використання-lean" tabindex="-1"><a class="header-anchor" href="#використання-lean"><span>Використання Lean:</span></a></h4><p>Lean підходить для проєктів, де є велика невизначеність, наприклад, у стартапах. Це дозволяє швидко виходити на ринок із мінімальною версією продукту, збирати зворотний зв&#39;язок і потім покращувати продукт залежно від потреб клієнтів. Цей підхід знижує ризики інвестицій у непотрібні функції та зменшує витрати на розробку.</p><h4 id="lean-vs-agile" tabindex="-1"><a class="header-anchor" href="#lean-vs-agile"><span>Lean vs Agile:</span></a></h4><ul><li><strong>Lean</strong> — це філософія, яка фокусується на оптимізації процесів і мінімізації витрат. Вона не надає конкретних інструментів чи циклів, але ідеально підходить для створення MVP і роботи в умовах невизначеності.</li><li><strong>Agile</strong> — це фреймворк, який пропонує конкретні підходи до управління проєктами через ітераційний процес розробки з активною взаємодією з клієнтом.</li></ul><p>Отже, <strong>Lean</strong> — це більше концепція для організації бізнес-процесів, яка може використовуватися разом з Agile у проєктах, особливо у стартапах і нових продуктах, для швидкого тестування і покращення ідей.</p><h3 id="scrum" tabindex="-1"><a class="header-anchor" href="#scrum"><span>Scrum</span></a></h3><p><strong>Scrum</strong> – це популярна методологія управління проектами, особливо в ІТ-індустрії, спрямована на підвищення ефективності та гнучкості проектних команд. Визначення Scrum базується на принципах гнучкого управління, де проекти виконуються в коротких ітеративних циклах, які називаються спринтами. Методологія Scrum призначена для швидкого реагування на зміни, мінімізації ризиків та регулярного випуску високоякісних продуктів.</p><figure><img src="https://web-promo.ua/wp-content/uploads/2023/11/skram.png" alt="Scrum methodology" tabindex="0" loading="lazy"><figcaption>Scrum methodology</figcaption></figure><h4 id="переваги-scrum" tabindex="-1"><a class="header-anchor" href="#переваги-scrum"><span>Переваги Scrum:</span></a></h4><ul><li>Підвищує гнучкість і креативність.</li><li>Забезпечує регулярний зворотний зв&#39;язок із замовником.</li><li>Дозволяє уникнути втоми через розподілення задач на дрібніші етапи.</li><li>Полегшує виявлення та вирішення проблем завдяки постійній комунікації в команді.</li><li>Особливо ефективний для невеликих команд (5-10 осіб).</li></ul><h4 id="недоліки-scrum" tabindex="-1"><a class="header-anchor" href="#недоліки-scrum"><span>Недоліки Scrum:</span></a></h4><ul><li>Не підходить для великих команд: Ефективність знижується, якщо команда перевищує 10 осіб.</li><li>Висока залежність від дисципліни команди: Успіх залежить від чіткого дотримання процесів.</li><li>Часті зустрічі можуть бути виснажливими: Постійні стендапи та рев&#39;ю можуть забирати час.</li><li>Непридатний для жорстких дедлайнів: Гнучкість Scrum не завжди відповідає проєктам з фіксованими строками та вимогами.</li><li>Вимагає постійного залучення замовника: Це може бути проблемою для клієнтів із зайнятим графіком.</li></ul><h4 id="кому-підходить-scrum" tabindex="-1"><a class="header-anchor" href="#кому-підходить-scrum"><span>Кому підходить Scrum:</span></a></h4><p><strong>Scrum</strong> ідеально підходить для команд, які працюють у динамічному середовищі, де вимоги можуть швидко змінюватися. Він особливо ефективний для стартапів або невеликих компаній, які займаються розробкою інноваційних продуктів. Цей підхід стане в пригоді проєктам, що потребують регулярного зворотного зв’язку від клієнтів та поступового вдосконалення. Scrum підійде розробникам, які прагнуть постійного поліпшення результатів і готові до активної комунікації в процесі роботи. Також він стане корисним для компаній, які цінують швидку адаптацію до ринкових змін і вимог користувачів.</p><h2 id="порівняльна-характеристика-існуючих-засобів-вирішення-завдання" tabindex="-1"><a class="header-anchor" href="#порівняльна-характеристика-існуючих-засобів-вирішення-завдання"><span>Порівняльна характеристика існуючих засобів вирішення завдання</span></a></h2><h3 id="github-projects" tabindex="-1"><a class="header-anchor" href="#github-projects"><span><a href="https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects" target="_blank" rel="noopener noreferrer">GitHub Projects</a></span></a></h3><p>GitHub Projects — це інструмент для керування проєктами, інтегрований безпосередньо з GitHub, що забезпечує команду можливістю організовувати та відстежувати роботу поруч із репозиторіями коду. Користувачі можуть створювати дошки з задачами, відстежувати прогрес за допомогою Kanban-дошок і автоматизувати оновлення статусів завдань на основі змін у коді. GitHub Projects підтримує тісну інтеграцію з pull requests, issues і комітами, що робить його ефективним рішенням для розробників, які працюють у гнучких командах. Система дозволяє створювати та налаштовувати декілька переглядів, фільтруючи, сортуючи або групуючи завдання, додавати власні поля для відстеження метаданих, потрібних команді. Замість того, щоб застосовувати певну методологію, проєкт надає гнучкі функції, які можна налаштувати відповідно до потреб та процесів певної команди.</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>Тісна інтеграція з github репозиторіями, pull requests та issues</li> <li>Наявність Kanban дошок, таблиць та roadmap</li> <li>Можливість групувати, сортувати та фільтрувати завдання</li> <li>Можливості кастомізації: <ul><li>додавання користувацьких полів різних типів</li> <li>сортування / фільтрування / групування за бажаним полем</li></ul></li> <li>Рівні дозволів учасників (read, write, admin)</li> <li>Автоматизація задач, перетягування карток та оновлення статусів залежно від дій на репозиторіях</li> <li>Весь функціонал доступний у безкоштовній версії</li></ul></td><td><ul><li>Обмежена гнучкість поза сферою розробки</li> <li>Відсутність розширеної аналітики</li> <li>Складність для нетехнічних користувачів</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Поглиблена автоматизація та з іншими сервісами, такими як Slack або Jira</li> <li>Розширення функцій управління проектами для нетехнічних команд</li></ul></td><td><ul><li>Залежність від GitHub</li> <li>Швидкі зміни в потребах розробників</li></ul></td></tr></tbody></table><h3 id="trello" tabindex="-1"><a class="header-anchor" href="#trello"><span><a href="https://trello.com/en" target="_blank" rel="noopener noreferrer">Trello</a></span></a></h3><p>Trello — це хмарний сервіс для управління проєктами, заснований на концепції Kanban-дошок. Він включає такі елементи, як команди, дошки, списки і картки, та дозволяє організовувати завдання у вигляді карток, які можна переміщати між стовпцями, що представляють етапи виконання завдань. Trello відомий своєю простотою і гнучкістю, пропонуючи можливість додавати терміни, списки задач, файли та коментарі до карток. Система легко інтегрується з іншими інструментами, такими як Google Drive або Jira та є популярною серед команд будь-якого розміру завдяки своїй простоті у використанні.</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>User-friendly інтерфейс, зручність роботи з різних пристроїв</li> <li>Можливості кастомізації для потреб команди</li> <li>Має інтеграції з Google Drive, Github, Gitlab, Jira, сторонніми інструментами для аналітики та автоматизації </li> <li>Доступний у вигляді додатку для Windows та MacOS</li></ul></td><td><ul><li>Складність організації масштабних проєктів</li> <li>Велика частина функціоналу доступна лише у платній версії</li> <li>Відсутність вбудованих інструментів аналітики</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Розширення функцій для великих команд</li> <li>Покращення автоматизації та аналітики</li></ul></td><td><ul><li>Залежність від сторонніх інтеграцій</li> <li>Зростаючі очікування від користувачів</li> <li>Проблеми з безпекою</li></ul></td></tr></tbody></table><h3 id="jira" tabindex="-1"><a class="header-anchor" href="#jira"><span><a href="https://www.atlassian.com/software/jira" target="_blank" rel="noopener noreferrer">Jira</a></span></a></h3><p>Jira — це потужна платформа для управління проєктами, створена компанією Atlassian. Він складається з трьох основних розділів: проєкти, проблеми та робочий процес. Jira пропонує можливості для відстеження завдань, багів, спринтів і прогресу розробки за допомогою Kanban або Scrum-дошок. Вона дозволяє детально налаштовувати робочі процеси, пріоритети завдань і відстежувати метрики продуктивності. Jira має гнучку систему автоматизації та інтеграції з багатьма іншими інструментами, такими як Bitbucket і Confluence та добре вписується в Agile-методологію управління проєктами. Варто зазначити, що Jira займає більшу частину ринку управління проєктами (42%).</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>Підтримка Scrum, Kanban-дошок, спринтів та backlog</li> <li>Гнучке налаштування робочих процесів, полів, прав доступу і завдань</li> <li>Розширені функції звітності, включаючи графіки, діаграми і трекінг прогресу</li> <li>Може використовуватися як для малих, так і для великих організацій</li> <li>Має велику кількість інтеграцій з іншими сервісами (Confluence, Bitbucket, GitHub, Slack)</li> <li>Наявність Atlassian Intelligence</li></ul></td><td><ul><li>Доволі складний інтерфейс для нових користувачів</li> <li>Переважна орієнтація на розробників</li> <li>Погана адаптація для короткострокових проектів</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Додавання розширених функцій автоматизації та штучного інтелекту</li> <li>Адаптація інтерфейсу для широкого кола користувачів</li> <li>Покращення мобільної версії</li></ul></td><td><ul><li>Зростаючі вимоги до захисту даних</li> <li>Сильна конкуренція з боку схожих систем</li></ul></td></tr></tbody></table><h3 id="backlog" tabindex="-1"><a class="header-anchor" href="#backlog"><span><a href="https://nulab.com/backlog" target="_blank" rel="noopener noreferrer">Backlog</a></span></a></h3><p>Backlog — це система для управління проєктами, орієнтована на команди розробників, яка пропонує інструменти для керування завданнями, трекінгу багів і версій програмного забезпечення. Backlog підтримує структурування проєктів за допомогою спринтів, Kanban-дошок і тимчасових шкал. Крім того, платформа інтегрується з репозиторіями коду, надаючи можливість стежити за рев&#39;ю й обговорювати проблеми в реальному часі.</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>Широкий функціонал: різні типи користувачів, ролі і права доступу, можливість ділитися файлами, wiki проєкту</li> <li>Інструменти для підтримки Agile-процесів(Kanban-дошки та Scrum-функціонал)</li> <li>Інтеграція з популярними інструментами, такими як GitHub, GitLab, Slack</li></ul></td><td><ul><li>Обмежені можливості для кастомізації</li> <li>Невеликий функціонал безкоштовної версії</li> <li>Відсутність підтримки складної аналітики</li> <li>Вартість підписки для великих команд або організацій може бути високою</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Впровадження штучного інтелекту для прогнозування результатів та аналізу даних</li> <li>Покращення інтерфейсу</li></ul></td><td><ul><li>Конкуренція з боку інших інструментів, які мають сильніші позиції на ринку (Jira, Trello, Asana)</li> <li>Високі вимоги до систем управління проєктами</li> <li>Питання безпеки даних</li></ul></td></tr></tbody></table><h3 id="asana" tabindex="-1"><a class="header-anchor" href="#asana"><span><a href="https://asana.com" target="_blank" rel="noopener noreferrer">Asana</a></span></a></h3><p>Asana — це інструмент для управління проєктами, призначений для оптимізації командної роботи та покращення співпраці. Має як вебверсію, так і мобільний додаток, і включає безліч функцій для ефективного контролю робочого процесу. Він дозволяє створювати проєкти, розбивати їх на завдання, відстежувати терміни та прогрес за допомогою календарів, таймлайнів і Kanban-дошок. Asana також забезпечує зручний обмін файлами, коментарями та інші інструменти для співпраці. Вона інтегрується з багатьма іншими додатками, що дозволяє налаштувати робочий процес під конкретні потреби команди.</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>Велика різноманітність подання завдань: таблиця, Kanban-дошка, календар, таймлайн, workflow</li> <li>Наявність чату для учасників проєкту</li> <li>Можливість ділитися файлами з командою</li> <li>Ролі користувачів на проєкті</li> <li>Наявність desktop додатку для Windows</li></ul></td><td><ul><li>Може мати складнощі в освоєнні через велику кількість функцій</li> <li>Відсутність безкоштовного плану</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Збільшення попиту на інструменти для спільної роботи</li> <li>Розширення інтеграцій та впровадження ШІ</li></ul></td><td><ul><li>Швидка зміна потреб ринку</li> <li>Вразливості в галузі безпеки</li></ul></td></tr></tbody></table><h3 id="basecamp" tabindex="-1"><a class="header-anchor" href="#basecamp"><span><a href="https://basecamp.com" target="_blank" rel="noopener noreferrer">Basecamp</a></span></a></h3><p>Basecamp — це платформа для управління проєктами, яка об&#39;єднує всі необхідні інструменти для командної роботи: обмін повідомленнями, список завдань, файли, терміни і командні чати. Basecamp має простий і мінімалістичний інтерфейс, орієнтований на полегшення спілкування та спільну роботу без зайвої складності. Вона надає централізоване місце для обговорення проєктів, обміну файлами та відстеження статусу завдань, що допомагає зменшити кількість зустрічей та електронної пошти в команді.</p><table><thead><tr><th>Strengths</th><th>Weaknesses</th></tr></thead><tbody><tr><td><ul><li>Інтуїтивний інтерфейс</li> <li>Наявність мобільної версії</li> <li>Наявність API для сторонніх додатків</li> <li>Можливості зберігання та спільного використання файлів</li></ul></td><td><ul><li>Обмежені можливості кастомізації</li> <li>Немає часової шкали для візуального відстежування завдань</li> <li>Відсутність традиційних таблиць та списків</li> <li>Складнощі з управлінням великими проєктами</li></ul></td></tr><tr><td><div style="text-align:center;"><strong>Opportunities</strong></div></td><td><div style="text-align:center;"><strong>Threats</strong></div></td></tr><tr><td><ul><li>Зростання попиту на віддалену роботу</li> <li>Розширення функціоналу: статуси завдань, відстеження часу, пріоритетність завдань</li> <li>Створення більш глибоких інтеграцій</li></ul></td><td><ul><li>Конкуренція з боку більш функціональних платформ</li> <li>Зростаючі очікування від інструментів управління проектами</li></ul></td></tr></tbody></table><h2 id="висновки" tabindex="-1"><a class="header-anchor" href="#висновки"><span>Висновки</span></a></h2><p><em>[Робляться висновки щодо доцільності розробки нової або модифікації існуючої інформаційної системи, необхідності та способів інтеграції з системами(сервісами) третіх сторін, тощо.]</em></p><h2 id="посилання" tabindex="-1"><a class="header-anchor" href="#посилання"><span>Посилання</span></a></h2><p><em>[Розділ містить повний список всіх документів, про які згадується.]</em></p>',82)]))}const d=t(r,[["render",n],["__file","state-of-the-art.html.vue"]]),h=JSON.parse('{"path":"/requirements/state-of-the-art.html","title":"Аналіз предметної області","lang":"en-US","frontmatter":{"description":"Аналіз предметної області Вступ [Вступ повинен містити короткий огляд всього документу.] Основні визначення Проєкт - обмежена в часі, ресурсах та вимогах якості унікальна сукупн...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/databases-labs/requirements/state-of-the-art.html"}],["meta",{"property":"og:site_name","content":"Система управління проєктами"}],["meta",{"property":"og:title","content":"Аналіз предметної області"}],["meta",{"property":"og:description","content":"Аналіз предметної області Вступ [Вступ повинен містити короткий огляд всього документу.] Основні визначення Проєкт - обмежена в часі, ресурсах та вимогах якості унікальна сукупн..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wizeclub.education/wp-content/uploads/2023/09/waterfall1.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-23T12:13:08.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-23T12:13:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Аналіз предметної області\\",\\"image\\":[\\"https://wizeclub.education/wp-content/uploads/2023/09/waterfall1.png\\",\\"https://www.nvisia.com/hubfs/agile-methodology-chicago.png\\",\\"https://optim.tildacdn.one/tild3732-6639-4638-a234-333434373765/-/format/webp/leanprinciples.jpg\\",\\"https://web-promo.ua/wp-content/uploads/2023/11/skram.png\\"],\\"dateModified\\":\\"2024-09-23T12:13:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Вступ","slug":"вступ","link":"#вступ","children":[]},{"level":2,"title":"Основні визначення","slug":"основні-визначення","link":"#основні-визначення","children":[]},{"level":2,"title":"Підходи та способи вирішення завдання","slug":"підходи-та-способи-вирішення-завдання","link":"#підходи-та-способи-вирішення-завдання","children":[{"level":3,"title":"Waterfall","slug":"waterfall","link":"#waterfall","children":[]},{"level":3,"title":"Agile","slug":"agile","link":"#agile","children":[]},{"level":3,"title":"Lean","slug":"lean","link":"#lean","children":[]},{"level":3,"title":"Scrum","slug":"scrum","link":"#scrum","children":[]}]},{"level":2,"title":"Порівняльна характеристика існуючих засобів вирішення завдання","slug":"порівняльна-характеристика-існуючих-засобів-вирішення-завдання","link":"#порівняльна-характеристика-існуючих-засобів-вирішення-завдання","children":[{"level":3,"title":"GitHub Projects","slug":"github-projects","link":"#github-projects","children":[]},{"level":3,"title":"Trello","slug":"trello","link":"#trello","children":[]},{"level":3,"title":"Jira","slug":"jira","link":"#jira","children":[]},{"level":3,"title":"Backlog","slug":"backlog","link":"#backlog","children":[]},{"level":3,"title":"Asana","slug":"asana","link":"#asana","children":[]},{"level":3,"title":"Basecamp","slug":"basecamp","link":"#basecamp","children":[]}]},{"level":2,"title":"Висновки","slug":"висновки","link":"#висновки","children":[]},{"level":2,"title":"Посилання","slug":"посилання","link":"#посилання","children":[]}],"git":{"createdTime":1708081508000,"updatedTime":1727093588000,"contributors":[{"name":"Bohdan Bulakh","email":"bgdn.56t@gmail.com","commits":1},{"name":"Dmytro Zanuda","email":"dmzanuda.work@gmail.com","commits":1},{"name":"Valentyn","email":"valentunbaxc@gmail.com","commits":1},{"name":"wiiiolettaaaaa","email":"160237848+wiiiolettaaaaa@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":9.92,"words":2975},"filePathRelative":"requirements/state-of-the-art.md","localizedDate":"February 16, 2024","autoDesc":true}');export{d as comp,h as data};
